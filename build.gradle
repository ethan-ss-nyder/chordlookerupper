/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.1.1/userguide/tutorial_java_projects.html
 */

plugins {
    // Apply the java plugin to add support for Java
    id 'java'

    // Apply the application plugin to add support for building a CLI application.
    id 'application'
}

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

dependencies {
    implementation 'se.michaelthelin.spotify:spotify-web-api-java:4.3.0'
    implementation 'org.jsoup:jsoup:1.13.1'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'
}

application {
    // Define the main class for the application.
    mainClassName = 'chordlookerupper.App'
}

jar {
    manifest {
        attributes(
            'Main-Class': application.mainClassName
        )
    }

    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

/**
 * Note: If you're building on Linux, remove the "cmd /c" part. If you're building on Windows, make sure you do so from the
 * Visual Studio x64 Developer command prompt. Yes, the architecture is important.
 */
task nativeImage(dependsOn: jar, type: Exec) {
    commandLine "cmd", "/c", "native-image", "-jar", "$buildDir/libs/${project.getName()}.jar", "--initialize-at-build-time=org.apache", "--enable-https", "$buildDir/${project.getName()}"
}